# https://taskfile.dev

version: '3'

vars:
  # Use gotestdox for gotestsum format if available, otherwise, use default
  TEST_SUM_FORMAT:
    sh: |
      if command -v "gotestdox" &> /dev/null; then
        echo "testdox"
      else
        echo "testname"
      fi
  # Uses `gotestsum` tool if installed https://github.com/gotestyourself/gotestsum
  TEST_CMD:
    sh: |
      if command -v "gotestsum" &> /dev/null; then
        echo "gotestsum --rerun-fails --packages="./..." --format {{.TEST_SUM_FORMAT}}"
      else
        echo "go test -v"
      fi

tasks:
  delve:
    aliases:
      - dlv
      - debug
      - dbg
    desc: Starts dlv debug session to attach terraform repo to.
    cmd: dlv debug --headless --continue --listen=127.0.0.1:60040 --api-version=2 --accept-multiclient -- -debug

  gen:
    aliases:
      - g
    cmd: go generate ./...
    desc: run 'go generate'

  fmt:
    cmd: go fmt ./...
    desc: Runs `go fmt ./...`

  build:
    aliases:
      - b
      - bld

    desc: Go Build check

    cmds:
      - defer: rm ./tempbuild
      - go build -o tempbuild

  lint:
    aliases:
      - l
      - lt
    desc: Lints project using golangci-lint
    cmd: golangci-lint run

  install:
    desc: Installs project binary in $GOBIN for local use
    aliases:
      - ins
      - i
    cmd: go install .


  acctest:
    aliases:
      - acc
      - at

    desc: Acceptance/Integration testing using live Zendesk Resources.

    vars:
      TARGET_SUITE:
        ref: .TARGET_SUITE | default "none"
    requires:
      vars:
        - name: TARGET_SUITE
          enum:
            - Automation
            - Brand
            - DynamicContent
            - Group
            - Locale
            - Macro
            - OrgField
            - Schedule
            - Search
            - SlaPolicy
            - TicketField
            - TicketForm
            - UserField
            - View
            - Webhook
            - none

    dotenv:
      - .env
    env:
      TF_ACC: 1
    cmd: |
      {{.TEST_CMD}} ./... -run
      {{- if ne .TARGET_SUITE "none"}} TestAcc{{.TARGET_SUITE}}{{else}} TestAcc*{{end}}

  unit-test:
    vars:
      CLEAR_CACHE:
        ref: .CLEAR_CACHE | default "false" | eq "true"
    aliases:
      - ut
      - t
      - test
    desc: Basic Unit testing
    cmd: |
      {{.TEST_CMD}} ./... -skip TestAcc*

  clear-test-cache:
    aliases:
      - ctc

    cmd: go clean -testcache


  etest: echo {{.TEST_CMD}}
